{"remainingRequest":"C:\\NodeJS\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\s445557\\vgauge\\src\\VGauge.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\s445557\\vgauge\\src\\VGauge.vue","mtime":1549519975558},{"path":"C:\\NodeJS\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\NodeJS\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\NodeJS\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Gauge } from \"gaugeJS/dist/gauge.min\";\nexport default {\n  name: 'VGauge',\n  props: {\n    decimalPlace: {\n      type: Number,\n      default: 0\n    },\n    gaugeValueClass: {\n      type: String,\n      default: \"\"\n    },\n    top: {\n      type: Boolean,\n      default: false\n    },\n    maxValue: {\n      type: Number,\n      default: 100\n    },\n    minValue: {\n      type: Number,\n      default: 0\n    },\n    options: {\n      type: Object,\n      default: function() {\n        return {\n          angle: 0.15,\n          lineWidth: 0.44,\n          radiusScale: 1,\n          pointer: {\n            length: 0.6,\n            strokeWidth: 0.035,\n            color: \"#000000\"\n          },\n          limitMax: false,\n          limitMin: false,\n          colorStart: \"#6FADCF\",\n          colorStop: \"#8FC0DA\",\n          strokeColor: \"#E0E0E0\",\n          generateGradient: true,\n          highDpiSupport: true\n        };\n      }\n    },\n    animationSpeed: {\n      type: Number,\n      default: 10\n    },\n    initialValue: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 50\n    }\n  },\n  data() {\n    return {\n      gauge: null\n    };\n  },\n  mounted() {\n    this.initializeGauge();\n  },\n  watch: {\n    value: function(newVal) {\n      this.gauge.set(newVal);\n    }\n  },\n  methods: {\n    initializeGauge() {\n      this.gauge = new Gauge(this.$refs.gauge);\n      this.gauge.maxValue = this.maxValue;\n      this.gauge.setMinValue(this.minValue);\n      this.gauge.animationSpeed = this.animationSpeed;\n      this.gauge.setOptions(this.options);\n      this.gauge.setTextField(\n        document.getElementById(\"gauge-value\"),\n        this.decimalPlace\n      );\n      this.gauge.set(this.value);\n    }\n  }\n};\n",{"version":3,"sources":["VGauge.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VGauge.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div>\n    <p id=\"gauge-value\" v-if=\"top\" :class=\"gaugeValueClass\"></p>\n    <canvas id=\"gauge\" ref=\"gauge\"></canvas>\n    <p id=\"gauge-value\" v-if=\"!top\" :class=\"gaugeValueClass\"></p>\n  </div>\n</template>\n\n<script>\nimport { Gauge } from \"gaugeJS/dist/gauge.min\";\nexport default {\n  name: 'VGauge',\n  props: {\n    decimalPlace: {\n      type: Number,\n      default: 0\n    },\n    gaugeValueClass: {\n      type: String,\n      default: \"\"\n    },\n    top: {\n      type: Boolean,\n      default: false\n    },\n    maxValue: {\n      type: Number,\n      default: 100\n    },\n    minValue: {\n      type: Number,\n      default: 0\n    },\n    options: {\n      type: Object,\n      default: function() {\n        return {\n          angle: 0.15,\n          lineWidth: 0.44,\n          radiusScale: 1,\n          pointer: {\n            length: 0.6,\n            strokeWidth: 0.035,\n            color: \"#000000\"\n          },\n          limitMax: false,\n          limitMin: false,\n          colorStart: \"#6FADCF\",\n          colorStop: \"#8FC0DA\",\n          strokeColor: \"#E0E0E0\",\n          generateGradient: true,\n          highDpiSupport: true\n        };\n      }\n    },\n    animationSpeed: {\n      type: Number,\n      default: 10\n    },\n    initialValue: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 50\n    }\n  },\n  data() {\n    return {\n      gauge: null\n    };\n  },\n  mounted() {\n    this.initializeGauge();\n  },\n  watch: {\n    value: function(newVal) {\n      this.gauge.set(newVal);\n    }\n  },\n  methods: {\n    initializeGauge() {\n      this.gauge = new Gauge(this.$refs.gauge);\n      this.gauge.maxValue = this.maxValue;\n      this.gauge.setMinValue(this.minValue);\n      this.gauge.animationSpeed = this.animationSpeed;\n      this.gauge.setOptions(this.options);\n      this.gauge.setTextField(\n        document.getElementById(\"gauge-value\"),\n        this.decimalPlace\n      );\n      this.gauge.set(this.value);\n    }\n  }\n};\n</script>\n"]}]}